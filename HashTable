public class HashTable {
    private Slot[] slots;
    
    public HashTable(int size) {
        slots = new Slot[size];
    }
    
    private int hash(int key) {
    return key % slots.length;
    }
    
    public void put(int key, Object value) {
    int hash = hash(key);

    // キーが登録されているか確認
    Slot current = slots[hash];
    while (current != null) {
        // キーが登録されている場合は置き換え
        if (current.key == key) {
            current.value = value;
            return;
        }
        current = current.next;
    }

    // キーが登録されていなかった場合はリストの先頭に追加（新規リスト作成含む）
    Slot newSlot = new Slot();
    newSlot.key = key;
    newSlot.value = value;
    newSlot.next = slots[hash];
    slots[hash] = newSlot;
    }
    
    public Object get(int key) {
    int hash = hash(key);
    // ハッシュ値が同じになるキーのリストを探索
    Slot current = slots[hash];
    while (current != null) {
        if (current.key == key) {
            return current.value;
        }
        current = current.next;
    }
    // キーがなかったらnullを返す
    return null;
    }
    public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append('{');
    for (int i = 0; i < slots.length; i++) {
        Slot current = slots[i];
        while (current != null) {
            sb.append(current.key).append('=').append(current.value);
            sb.append(", ");
            current = current.next;
        }
    }
    sb.append('}');
    return sb.toString();
    }
}
